<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <modelVersion>4.0.0</modelVersion>
     <parent>
        <groupId>org.anchoranalysis.anchor</groupId>
   	    <artifactId>anchor-parent-assembly</artifactId>
		<version>0.0.6-SNAPSHOT</version>
    </parent> 
	
  <artifactId>anchor-assembly</artifactId>
    <url>http://www.anchoranalysis.org/</url>
  
  <packaging>pom</packaging>

  <name>anchor-assembly</name>
	
	
  <!-- We specify two different profiles depending on whether
	   we wish to include the GUI or not in the build. use -DnoGUI to trigger the withoutGUI -->
	<profiles>
		<profile>
			<id>withGUI</id>
			<activation>
			  <property>
				<name>!noGUI</name>
			  </property>
			</activation>
			<dependencies>
				<dependency>
				  <groupId>${project.groupId}</groupId>
				  <artifactId>anchor-browser</artifactId>
				  <version>${project.version}</version>
				</dependency>
			</dependencies>
		</profile>

		<profile>
			<id>withoutGUI</id>
			<activation>
			  <property>
				<name>noGUI</name>
			  </property>
			</activation>
		</profile>
		
		<!-- Build the EXE launcher only on windows -->
		<profile>
			<id>makeExes</id>
			<activation>
			<os>
				<family>Windows</family>
			  </os>
			</activation>
			<build>
				<plugins>
	    
					<!-- LAUNCH4J -->
						 
					  <plugin>
						 <groupId>com.akathist.maven.plugins.launch4j</groupId>
						 <artifactId>launch4j-maven-plugin</artifactId>
						 <version>1.7.25</version>
						 <executions>
						 
						 <!-- This generates an anchor.exe (command-line) with Launch4J and places it in the target distribution -->
						 <execution>
								 <id>l4j-clui1</id>
								 <phase>package</phase>
								 <goals>
									 <goal>launch4j</goal>
								 </goals>
								 <configuration>
									  <headerType>console</headerType>
									  <outfile>${project.build.directory}/anchor-assembly-${project.version}-dist/bin/anchor.exe</outfile>
									  <jar>anchor-launcher</jar>
									  <dontWrapJar>true</dontWrapJar>
									  <errTitle>Anchor</errTitle>
									  <downloadUrl>http://java.com/download</downloadUrl>
									
									  <classPath>
										<mainClass>org.anchoranalysis.launcher.Launch</mainClass>
										<postCp>%EXEDIR%/*.jar;%EXEDIR%/../lib/*.jar</postCp>
										<addDependencies>false</addDependencies>
									  </classPath>
									  
									  <jre>
										<minVersion>1.8</minVersion>
										<initialHeapPercent>20</initialHeapPercent>
										<maxHeapPercent>80</maxHeapPercent>
									  </jre>
								 </configuration>
							 </execution>
							 
							 <!-- This generates an anchorGUI.exe (GUI) with Launch4J and places it in the target distribution -->
							 <execution>
								 <id>l4j-clui2</id>
								 <phase>package</phase>
								 <goals>
									 <goal>launch4j</goal>
								 </goals>
								 <configuration>
									  <headerType>console</headerType>
									  <outfile>${project.build.directory}/anchor-assembly-${project.version}-dist/bin/anchorGUI.exe</outfile>
									  <jar>anchor-browser</jar>
									  <dontWrapJar>true</dontWrapJar>
									  <errTitle>Anchor GUI</errTitle>
									  <downloadUrl>http://java.com/download</downloadUrl>
									
									  <classPath>
										<mainClass>org.anchoranalysis.browser.launcher.LaunchInteractiveBrowser</mainClass>
										<postCp>%EXEDIR%/*.jar;%EXEDIR%/../lib/*.jar</postCp>
										<addDependencies>false</addDependencies>
									  </classPath>
									  
									  <jre>
										<minVersion>1.8</minVersion>
										<initialHeapPercent>20</initialHeapPercent>
										<maxHeapPercent>80</maxHeapPercent>
										
										<opts>
											<opt>-Dsun.java2d.uiScale=1</opt>	
										</opts>
									  </jre>
									  
									  
								 </configuration>
							 </execution>
						 </executions>
					 </plugin>
				</plugins>
			</build>
		</profile>
		
	</profiles>
  
  <dependencies>


	<dependency>
	  <groupId>${project.groupId}</groupId>
	  <artifactId>anchor-launcher</artifactId>
	  <version>${project.version}</version>
	</dependency>
		
	
	<!-- GPL PLUGINS -->
	<!-- This is the MAIN LOCATION where we update the version of GPL plugins -->
	
	<dependency>
	  <groupId>${project.groupId}</groupId>
	  <artifactId>anchor-plugin-fiji</artifactId>
	  <version>0.0.5-SNAPSHOT</version>
	</dependency>
	
	<dependency>
	  <groupId>${project.groupId}</groupId>
	  <artifactId>anchor-plugin-io-gpl</artifactId>
	  <version>0.0.5-SNAPSHOT</version>
	</dependency>
	
	<dependency>
	  <groupId>${project.groupId}</groupId>
	  <artifactId>anchor-plugin-ml</artifactId>
	  <version>0.0.5-SNAPSHOT</version>
	</dependency>
	
  </dependencies>
	
  <build>
    <plugins>
    
      <!-- Creates a folder with all the files needed for running Anchor in target/ -->
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>make-assembly</id>
            <goals>
              <goal>single</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <descriptors>
                <descriptor>src/assembly/dist.xml</descriptor>
              </descriptors>
              <attach>false</attach>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
	        <artifactId>maven-antrun-plugin</artifactId>
	        <version>3.0.0</version>
	        <executions>
	        
	          <!-- Automatically copies build files to a directory ${anchor.home.deploy} to make it
	             easier during development to update the distribution -->
	          <execution>
	            <phase>install</phase>
	            <configuration>
				
	              <target if="anchor.home.deploy">
	              	<!--  Deletes the existing deploy directory (to prevent multiple JARs as SNAPSHOTs resolve to timestamps 
	              			and copies necessary files inside.
	              			
	              			Lastly, makes the anchor binary executable on Linux
	              	-->

					<echo message="Deleting the directory: ${anchor.home.deploy}/"/>
					<delete dir="${anchor.home.deploy}/" />
					
					<echo message="Copying a distribution into: ${anchor.home.deploy}/"/>					
					<mkdir dir="${anchor.home.deploy}/" />
	
						<!--  We add in a ../ to bring us back to the top-level of the multi-module project -->
					  <copy todir="${anchor.home.deploy}/">
							<fileset dir="${project.build.directory}/anchor-assembly-${project.version}-dist/" />
					  </copy>
	
					<chmod file="${anchor.home.deploy}/bin/anchor" perm="ugo+rx" />
					<chmod file="${anchor.home.deploy}/bin/anchorGUI" perm="ugo+rx" />
	
	              </target>
	            </configuration>
	            <goals>
	              <goal>run</goal>
	            </goals>
	          </execution>
	        </executions>
	      </plugin>
	    
		<!-- Force a clean to occur before any deploy -->
		  <plugin>
			<artifactId>maven-clean-plugin</artifactId>
			<version>2.4.1</version>
			<executions>
			  <execution>
				<id>auto-clean</id>
				<phase>initialize</phase>
				<goals>
				  <goal>clean</goal>
				</goals>
			  </execution>
			</executions>
		  </plugin>
	  
    </plugins>
  </build>
  
</project>