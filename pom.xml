<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <modelVersion>4.0.0</modelVersion>
     <parent>
        <groupId>org.anchoranalysis.anchor</groupId>
   	    <artifactId>anchor-pom</artifactId>
		<version>1.0.0</version>
    </parent> 
	
  <artifactId>anchor</artifactId>
  <version>1.0.0</version>
    <url>http://www.anchoranalysis.org/</url>
  
  <packaging>pom</packaging>
  
  <name>Anchor Distribution</name>
  
  <description>A distribution that bundles the Anchor JARs, including plugins together with a launcher application.</description>

    <licenses>
        <license>
            <name>The MIT License</name>
            <url>https://github.com/anchoranalysis/anchor-plugins/blob/master/LICENSE.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
	
	<developers>
        <developer>
            <id>owenfeehan</id>
            <name>Owen Feehan</name>
		  <organizationUrl>http://www.owenfeehan.com</organizationUrl>
        </developer>
    </developers>
  
	  <dependencies>

		<dependency>
		  <groupId>${project.groupId}</groupId>
		  <artifactId>anchor-launcher</artifactId>
		  <version>1.0.0</version>
		</dependency>
			
		
		<!-- GPL PLUGINS -->
		<!-- This is the MAIN LOCATION where we update the version of GPL plugins -->
		
		<dependency>
		  <groupId>${project.groupId}</groupId>
		  <artifactId>anchor-plugin-fiji</artifactId>
		  <version>1.0.0</version>
		</dependency>
		
		<dependency>
		  <groupId>${project.groupId}</groupId>
		  <artifactId>anchor-plugin-io-gpl</artifactId>
		  <version>1.0.0</version>
		</dependency>
		
				
			<!-- We add both onnxruntime dependencies (GPU and CPU) so the appropriate one can be removed later depending on operating system. -->
			<dependency>
				<groupId> com.microsoft.onnxruntime</groupId>
				<artifactId>onnxruntime</artifactId>
				<version>${onnx-runtime.version}</version>
			</dependency>
			
			<dependency>
				<groupId> com.microsoft.onnxruntime</groupId>
				<artifactId>onnxruntime_gpu</artifactId>
				<version>${onnx-runtime.version}</version>
			</dependency>
			
			<!-- To ensure the lombok jar is distributed. -->
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
			</dependency>
		
	  </dependencies>
	
	<!-- For tagging releases. -->
  	<scm>
		<connection>scm:git:git@github.com:anchoranalysis/anchor-assembly.git</connection>
		<developerConnection>scm:git:git@github.com:anchoranalysis/anchor-assembly.git</developerConnection>
		<url>https://github.com/anchoranalysis/anchor-assembly</url>
		<tag>HEAD</tag>
	</scm>
	
	<!-- For connecting to SonarCloud. -->
	<properties>
		<sonar.organization>anchoranalysis</sonar.organization>
		<sonar.host.url>https://sonarcloud.io</sonar.host.url>
		<sonar.projectKey>anchoranalysis_anchor-assembly</sonar.projectKey>
	</properties>
  	
	<repositories>
					
		<!-- Provides a means of reaching Snapshots on Maven Central -->
	  <repository>
		<name>Central Portal Snapshots</name>
		<id>central-portal-snapshots</id>
		<url>https://central.sonatype.com/repository/maven-snapshots/</url>
		<releases>
		  <enabled>false</enabled>
		</releases>
		<snapshots>
		  <enabled>true</enabled>
		</snapshots>
	  </repository>

	</repositories>	
	
	<build>
	
		<pluginManagement>
			<plugins>
			  <plugin>
				<groupId>org.panteleyev</groupId>
				<artifactId>jpackage-maven-plugin</artifactId>
				<version>1.6.6</version>
						<configuration>
						  
						  <input>${project.build.directory}/anchor-${project.version}-anchor/anchor-${project.version}/lib</input>
						  <mainJar>anchor-launcher-${project.version}.jar</mainJar>
						  <mainClass>org.anchoranalysis.launcher.Launch</mainClass>              
						  
						  <!--
							Specifies the location in which generated output files are placed.
							Default value: $?{project.build.directory}/jpackage
						  -->
						  <destination>${project.build.directory}/jpackage</destination>
						  
						  
							<!-- Enable console output from jpackage -->
						<verbose>true</verbose>
						  
						  <!--
							Specifies version of the application and/or package.
						  -->
						  <appVersion>1.0.0</appVersion>
						  
						  <!--
							Specifies description of the application.
						  -->
						  <description>Anchor Image Analysis</description>
						  
						  <!--
							Specifies vendor of the application.
						  -->
						  <vendor>Owen Feehan</vendor>
						  
						  <!--
							Specifies the options to pass to the Java runtime.
						  -->
						  <javaOptions>
								<javaOption>-Dlogging.level=INFO</javaOption>
								<javaOption>-Djava.util.logging.config.file=logging.properties</javaOption>
								<javaOption>--enable-native-access=ALL-UNNAMED</javaOption>
								<javaOption>-Djava.library.path=$APPDIR</javaOption>
						  </javaOptions>
						  
						</configuration>             
			  </plugin>
			  

			</plugins>
		 </pluginManagement>	
	
	
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>${license-maven-plugin.version}</version>
				<configuration>
					<licenseName>gpl_v3</licenseName>
					<includes>
						<include>**/*.java</include>
					</includes>
							
				</configuration>
			</plugin>
		
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<configuration>
					<!-- When using a release parent pom, this should be true to prevent parent POM from being automatically deployed, relying instead on manually using the release plugin. 
					When using a snapshot parent pom, this should be false.
					-->
					<skip>false</skip>
				</configuration>
				<inherited>false</inherited>
		  </plugin>
					
	<!--  Unpack ONNX Runtime JAR, so the native libs can be copied into the respective disbiutions -->
       <plugin>
         <groupId>org.apache.maven.plugins</groupId>
         <artifactId>maven-dependency-plugin</artifactId>
         <version>3.2.0</version>
         <executions>
           <execution>
             <id>unpack</id>
             <phase>package</phase>
             <goals>
               <goal>unpack</goal>
             </goals>
             <configuration>
               <artifactItems>
                 <artifactItem>
                 
				   <groupId>com.microsoft.onnxruntime</groupId>
				   <artifactId>onnxruntime_gpu</artifactId>
				   <version>${onnx-runtime.version}</version>
                   <type>jar</type>
                   <overWrite>true</overWrite>
                 </artifactItem>
               </artifactItems>
               <outputDirectory>${project.build.directory}/onnxruntime</outputDirectory>
               <overWriteReleases>true</overWriteReleases>
               <overWriteSnapshots>true</overWriteSnapshots>
             </configuration>
           </execution>
         </executions>
       </plugin>
       
	
      <!-- Creates a folder with all the files needed for running Anchor in target/ -->
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>make-assembly</id>
            <goals>
              <goal>single</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <descriptors>
                <descriptor>src/assembly/anchor.xml</descriptor>
              </descriptors>
              <attach>true</attach>
            </configuration>
          </execution>
        </executions>
      </plugin>
     
	    
		<!-- Force a clean to occur before any deploy -->
		  <plugin>
			<artifactId>maven-clean-plugin</artifactId>
			<version>2.4.1</version>
			<executions>
			  <execution>
				<id>auto-clean</id>
				<phase>initialize</phase>
				<goals>
				  <goal>clean</goal>
				</goals>
			  </execution>
			</executions>
		  </plugin>					
					
		</plugins>
	</build>
  
  <profiles>
      <!-- JPackager on Windows -->
      <profile>
          <id>windows</id>
          <activation>
            <os><family>Windows</family></os>
          </activation>
          <build>
            <plugins>
                <plugin>
				<groupId>org.panteleyev</groupId>
				<artifactId>jpackage-maven-plugin</artifactId>
                  <executions>
                    <execution>
                      <id>jpackage-installer</id>
                      <phase>verify</phase>
                      <goals>
                        <goal>jpackage</goal>
                      </goals>
                      <configuration>
					  
						<!-- Type of package to build -->
						<type>EXE</type>
                      
                            <!-- Upper-case first character to match Windows style -->
                            <name>Anchor</name>
                            
                            <!--
                        Specifies the relative sub-path under the default installation
                        location of the application for Windows.
                        
                        Lower-case first character to match Windows style.
                        -->
                            <installDir>Anchor</installDir>

                            <!-- Indicate its a CLI app -->
                            <winConsole>true</winConsole>
                      
                            <!--
                              Enable adding a dialog to choose a directory in which
                              the product is installed.
                              Default value: false
                            -->
                            <winDirChooser>true</winDirChooser>
                            
                            <!--
                              Enable requesting to perform an install on a per-user basis.
                              Default value: false
                            -->
                            <winPerUserInstall>true</winPerUserInstall>
                            
                            <!--
                              UUID associated with upgrades for this package.
                            -->
                            <winUpgradeUuid>990bbd96-da42-437d-af8a-aeca5e0a7a5a</winUpgradeUuid>
                    
                      </configuration>
                    </execution>
                  </executions>
                </plugin>	
            </plugins>
          </build>
      </profile>
      
      
      <!-- JPackager on Linux -->
      <profile>
          <id>linux</id>
          <activation>
            <os><name>Linux</name></os>
          </activation>
          <build>
            <plugins>
                <plugin>
				<groupId>org.panteleyev</groupId>
                  <artifactId>jpackage-maven-plugin</artifactId>
                  <executions>
                    <execution>
                      <id>jpackage-installer</id>
                      <phase>verify</phase>
                      <goals>
                        <goal>jpackage</goal>
                      </goals>
                      <configuration>
					  
						 <!-- Type of package to build -->
						<type>DEB</type>
  
                              <!-- Lower-case first character to match Linux style -->
                            <name>anchor</name>
                                            
                      </configuration>
                    </execution>
                  </executions>
                </plugin>	
            </plugins>
          </build>
      </profile>
      
      
      <!-- JPackager on MacOS -->
      <profile>
          <id>MacOS</id>
          <activation>
            <os><name>Mac OS X</name></os>
          </activation>
          <build>
            <plugins>
                <plugin>
				<groupId>org.panteleyev</groupId>
                  <artifactId>jpackage-maven-plugin</artifactId>
                  <executions>
                    <execution>
                      <id>jpackage-installer</id>
                      <phase>verify</phase>
                      <goals>
                        <goal>jpackage</goal>
                      </goals>
                      <configuration>

						 <!-- Type of package to build -->
						<type>PKG</type>
						
                            <!-- Lower-case first character to match MacOS style -->
                            <name>anchor</name>
                            
                      </configuration>
                    </execution>
                  </executions>
                </plugin>	
            </plugins>
          </build>
      </profile>      
      
  </profiles>
  
</project>
