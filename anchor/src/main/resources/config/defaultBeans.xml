<?xml version="1.0" encoding="ISO-8859-1" ?>
<config>
<bean config-class="java.util.List" config-factory="list">

	<!-- 
	
	   Read images using OpenCV for JPEG (because it corrects exif orientation) and BMP (because the BioformatsReader
	   fails on certain types).
	   
	   Otherwise Bioformats is used to read files.
	   
	 -->
	<item config-class="org.anchoranalysis.bean.NamedBean" name="org.anchoranalysis.image.io.bean.stack.reader.StackReader">
		<item config-class="org.anchoranalysis.plugin.io.bean.stack.reader.BranchExtension">
			<extensions config-class="org.anchoranalysis.bean.StringSet" config-factory="stringSet">
				<item>jpg</item>
				<item>jpeg</item>
			</extensions>		
			<readerMatching config-class="org.anchoranalysis.plugin.opencv.bean.stack.OpenCVReader"/>
			<readerNotMatching config-class="org.anchoranalysis.io.bioformats.bean.BioformatsReader">
				<options config-class="org.anchoranalysis.io.bioformats.bean.options.ForceBitsPerPixel" bitsPerPixel="8">
					<options config-class="org.anchoranalysis.io.bioformats.bean.options.ForceTimeSeriesToStack"/>
				</options>
			</readerNotMatching>
		</item>
	</item>
	
	<!-- 
	
	  Write PNGs (for single or three-channeled 2D images) or Tiffs (for single or three-channeled 3D images) or OME-TIFFs for everything else.
	  
	  In two cases (single-channeled or RGB-images that are always 2D), the user can
	  suggest a file-format that is used for performing the output.  If no suggestion
	  is made the default is used. 
	-->
	<item config-class="org.anchoranalysis.bean.NamedBean" name="org.anchoranalysis.image.io.bean.stack.writer.StackWriter">
		<item config-class="org.anchoranalysis.plugin.io.bean.stack.writer.BranchChannels">
			
			<!--  Catch all writer that can support almost any combination of channels / stacks  -->
			<writer config-class="org.anchoranalysis.io.bioformats.bean.writer.OMETiff"/>

			<!-- If it's guaranteed to be RGB (three channels) use a PNG (by default) if guaranteed to be 2D, or a TIFF otherwise -->
			<whenRGB config-class="org.anchoranalysis.plugin.io.bean.stack.writer.BranchStack">

				<!-- If the user suggests an alternative format, then use any of these in the 2D case... -->				
				<writerAlways2D config-class="org.anchoranalysis.plugin.io.bean.stack.writer.BranchSuggestedFormat">
					<writersIfSuggested config-class="java.util.List" config-factory="list">
						<item config-class="org.anchoranalysis.io.imagej.bean.stack.writer.PNG"/>
						<item config-class="org.anchoranalysis.io.bioformats.bean.writer.Tiff"/>
						<item extension="jpg" config-class="org.anchoranalysis.plugin.io.bean.stack.writer.ImageIOWriter"/>
						<item extension="bmp" config-class="org.anchoranalysis.plugin.io.bean.stack.writer.ImageIOWriter"/>
						<item config-class="org.anchoranalysis.io.bioformats.bean.writer.OMETiff"/>
					</writersIfSuggested>
					<!-- The default if no format is suggested -->
					<writerIfNoSuggestion config-class="org.anchoranalysis.io.imagej.bean.stack.writer.PNG"/>
				</writerAlways2D>
				<writerElse config-class="org.anchoranalysis.io.bioformats.bean.writer.Tiff"/>
			</whenRGB>
			
			<!-- Likewise if it's guaranteed to be three channels and not RGB use a TIFF -->
			<whenThreeChannels config-class="org.anchoranalysis.plugin.io.bean.stack.writer.BranchSuggestedFormat">
				<writersIfSuggested config-class="java.util.List" config-factory="list">
					<item config-class="org.anchoranalysis.io.bioformats.bean.writer.Tiff"/>
					<item config-class="org.anchoranalysis.io.bioformats.bean.writer.OMETiff"/>
					<item config-class="org.anchoranalysis.io.bioformats.bean.writer.OMEXML"/>
				</writersIfSuggested>
				<!-- The default if no format is suggested -->
				<writerIfNoSuggestion config-class="org.anchoranalysis.io.bioformats.bean.writer.Tiff"/>
			</whenThreeChannels>
				
			<!-- Likewise if it's guaranteed to be a single non-binary channel, use a PNG (by default) if guaranteed to be 2D, or a TIFF otherwise -->
			<whenSingleChannel config-class="org.anchoranalysis.plugin.io.bean.stack.writer.BranchStack">

				<!-- If the user suggests an alternative format, then use any of these in the 2D case... -->
				<writerAlways2D config-class="org.anchoranalysis.plugin.io.bean.stack.writer.BranchSuggestedFormat">
					<writersIfSuggested config-class="java.util.List" config-factory="list">
						<item config-class="org.anchoranalysis.io.imagej.bean.stack.writer.PNG"/>
						<item config-class="org.anchoranalysis.io.bioformats.bean.writer.Tiff"/>
						<item extension="jpg" config-class="org.anchoranalysis.plugin.io.bean.stack.writer.ImageIOWriter"/>
						<item extension="bmp" config-class="org.anchoranalysis.plugin.io.bean.stack.writer.ImageIOWriter"/>
						<item config-class="org.anchoranalysis.io.bioformats.bean.writer.OMETiff"/>
						<item config-class="org.anchoranalysis.io.bioformats.bean.writer.OMEXML"/>
					</writersIfSuggested>
					<!-- The default if no format is suggested -->
					<writerIfNoSuggestion config-class="org.anchoranalysis.io.imagej.bean.stack.writer.PNG"/>
				</writerAlways2D>
				<writerElse config-class="org.anchoranalysis.io.bioformats.bean.writer.Tiff"/>
			</whenSingleChannel>
									
			<!-- Likewise if it's guaranteed to be a single binary channel, use a PNG if guaranteed to be 2D, or a TIFF otherwise -->
			<whenBinaryChannel config-class="org.anchoranalysis.plugin.io.bean.stack.writer.BranchStack">
				<writerAlways2D config-class="org.anchoranalysis.io.imagej.bean.stack.writer.PNG"/>
				<writerElse config-class="org.anchoranalysis.io.bioformats.bean.writer.Tiff"/>
			</whenBinaryChannel>
		</item>
	</item>
	
	
	<!-- 
	   Default naming of inputs from filename.
	   
	   Unique names is inferring from the minimally varying part of the filenames (e.g. an incrementing integer, varying string etc.).
	   
	   An option uses the entire relative filename/path to a directory. 
	 -->
	<item config-class="org.anchoranalysis.bean.NamedBean" name="org.anchoranalysis.io.input.bean.namer.FileNamer">
		<item config-class="org.anchoranalysis.plugin.io.bean.file.namer.SubsetRangeIfRequested">
			<namer config-class="org.anchoranalysis.plugin.io.bean.file.namer.RemoveExtension">
				<namer config-class="org.anchoranalysis.plugin.io.bean.file.namer.IfRelativeToDirectory">
					<whenRelative config-class="org.anchoranalysis.plugin.io.bean.file.namer.RelativeToDirectory"/>
					<otherwise config-class="org.anchoranalysis.plugin.io.bean.file.namer.patternspan.PatternSpan"/>
				</namer>
			</namer>
		</item>
	</item>
	
</bean>
</config>