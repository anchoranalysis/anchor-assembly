<!--
  #%L
  packaging distribution
  %%
  Copyright (C) 2016 ETH Zurich, University of Zurich, Owen Feehan
  %%
  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:
  
  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.
  
  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  THE SOFTWARE.
  #L%
  -->
 <assembly xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.3"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.3 http://maven.apache.org/xsd/assembly-1.1.3.xsd">
  <!-- Left blank to avoid a suffix in the output subdirectory name. -->
  <id>anchor</id>
  <formats>
    <format>dir</format>
    <format>zip</format>
  </formats>
  <includeBaseDirectory>true</includeBaseDirectory>

  <!-- the README.txt is explicitly copied to allow filtering (to replace a placeholder
    with the current version. -->     
  <files>
    <file>
      <source>src/main/resources/topleveldocs/README.txt</source>
      <outputDirectory>lib/</outputDirectory>
      <filtered>true</filtered>
    </file>
  </files>
	   
  <fileSets>

    
    <!--  The documentation placed in the top-level folder of the Anchor distribution -->
     <fileSet>
        <directory>src/main/resources/topleveldocs</directory>
        <outputDirectory></outputDirectory>
        <filtered>true</filtered>
        <lineEnding>lf</lineEnding>
        <excludes>
	        <!-- This corrects a bug where .formatted files are outputed alongside the intended files. -->
			<exclude>*.formatted</exclude>
			<exclude>lib/README.txt</exclude>
		</excludes>
     </fileSet>
    
     <fileSet>
        <directory>src/main/resources/config</directory>
        <outputDirectory>lib/config</outputDirectory>
        <lineEnding>lf</lineEnding>
        <excludes>
        	<!-- This corrects a bug where .formatted files are outputed alongside the intended files. -->
			<exclude>*.formatted</exclude>
		</excludes>
     </fileSet>
     
     <fileSet>
        <directory>src/main/resources/helperapps</directory>
        <outputDirectory>lib</outputDirectory>
        <lineEnding>lf</lineEnding>
        <excludes>
	        <!-- This corrects a bug where .formatted files are outputed alongside the intended files. -->
			<exclude>*.formatted</exclude>
		</excludes>
        <fileMode>0755</fileMode>
     </fileSet>
     
     <fileSet>
        <directory>src/main/resources/models</directory>
        <outputDirectory>lib/models</outputDirectory>
     </fileSet>     
     
       
     <!-- Copy the windows files for the onnx runtime -->
     <fileSet>
     	<directory>${project.build.directory}/onnxruntime/ai/onnxruntime/native/win-x64</directory>
     	<outputDirectory>lib/onnxruntime</outputDirectory>
	    <includes>
        	<include>*.dll</include>
        </includes>
     </fileSet>
          
  </fileSets>
    
  <dependencySets>

	<!--  All the dependencies needed, apart from the anchor-launcher jar, are placed in the lib/ folder, unless they are plugins. -->
    <dependencySet>
      <useProjectArtifact>false</useProjectArtifact>
      <useTransitiveDependencies>true</useTransitiveDependencies>
      <unpack>false</unpack>
      <scope>runtime</scope>
      <outputDirectory>lib</outputDirectory>
      <excludes>
      	<!--  We exclude the CPU version of the ONNX runtime, so only the GPU version remains. -->
      	<exclude>com.microsoft.onnxruntime:onnxruntime:*:*</exclude>
      </excludes>
    </dependencySet>
    
    <!--  The anchor-launcher jar is placed in lib folder. This is a simple bootstrap used to start
      anchor from the command-line. -->
    <dependencySet>
      <useProjectArtifact>false</useProjectArtifact>
      <useTransitiveDependencies>true</useTransitiveDependencies>
      <unpack>false</unpack>
      <scope>runtime</scope>
      <outputDirectory>lib</outputDirectory>
      <outputFileNameMapping>${artifact.artifactId}.${artifact.extension}</outputFileNameMapping>
      <includes>
      	<include>org.anchoranalysis.anchor:anchor-launcher:*:*</include>
      </includes>
    </dependencySet>
    
  </dependencySets>

 </assembly>